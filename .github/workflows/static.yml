<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Water Quality Calculator with Excel Export</title>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.18.5/xlsx.full.min.js"></script>
    <style>
        body {
            font-family: Arial, sans-serif;
            padding: 20px;
            max-width: 800px;
            margin: auto;
            background-color: #f2f9ff;
        }
        h1 {
            text-align: center;
        }
        label, input {
            display: block;
            margin: 10px 0;
            width: 100%;
        }
        input[type="number"] {
            padding: 8px;
        }
        button {
            margin-top: 10px;
            padding: 10px;
            width: 100%;
            background-color: #007BFF;
            color: white;
            border: none;
            font-size: 16px;
        }
        .results {
            margin-top: 20px;
            background: #e8f4fd;
            padding: 15px;
            border-radius: 5px;
        }
        .results div {
            margin: 5px 0;
        }
        table {
            width: 100%;
            margin-top: 20px;
            border-collapse: collapse;
        }
        table, th, td {
            border: 1px solid #ddd;
        }
        th, td {
            padding: 8px;
            text-align: left;
        }
    </style>
</head>
<body>

<h1>Water Quality Calculator</h1>

<label for="ec">Electrical Conductivity (EC) in ÂµS/cm:</label>
<input type="number" id="ec" placeholder="Enter EC value" step="any">

<button id="calculateBtn">Calculate Parameters</button>
<button id="downloadBtn" style="display:none;">Download All Results as Excel</button>

<div class="results" id="results" style="display:none;">
    <h3>Results:</h3>
    <div id="tds"></div>
    <div id="chloride"></div>
    <div id="sulphate"></div>
    <div id="alkalinity"></div>
    <div id="sodium"></div>
    <div id="potassium"></div>
    <div id="silica"></div>
</div>

<h3>Previous Entries:</h3>
<table id="resultTable">
    <thead>
        <tr>
            <th>S.No</th>
            <th>Sample Code</th>
            <th>TDS (mg/L)</th>
            <th>Chloride (mg/L)</th>
            <th>Sulphate (mg/L)</th>
            <th>Total Alkalinity (mg/L)</th>
            <th>Sodium (mg/L)</th>
            <th>Potassium (mg/L)</th>
            <th>Silica (mg/L)</th>
        </tr>
    </thead>
    <tbody>
        <!-- Entries will be added here -->
    </tbody>
</table>

<script>
    let resultData = [];
    let entryCount = 0;

    // Function to perform calculations based on the EC value entered
    function calculate() {
        const ec = parseFloat(document.getElementById("ec").value);
        const sampleCode = `Sample${entryCount + 1}`; // Unique Sample Code for each entry

        if (isNaN(ec) || ec <= 0) {
            alert("Please enter a valid EC value.");
            return;
        }

        // Perform calculations
        const tds = ec * 0.65;
        const chloride = tds * 0.36;
        const sulphate = tds * 0.23;
        const alkalinity = tds * 0.32;
        const sodium = chloride * 0.43;
        const potassium = sodium * 0.25;
        const silica = sodium * 0.18;

        // Update display with the calculated values
        document.getElementById("results").style.display = "block";
        document.getElementById("downloadBtn").style.display = "block";

        document.getElementById("tds").innerText = `TDS: ${tds.toFixed(2)} mg/L`;
        document.getElementById("chloride").innerText = `Chloride: ${chloride.toFixed(2)} mg/L`;
        document.getElementById("sulphate").innerText = `Sulphate: ${sulphate.toFixed(2)} mg/L`;
        document.getElementById("alkalinity").innerText = `Total Alkalinity: ${alkalinity.toFixed(2)} mg/L`;
        document.getElementById("sodium").innerText = `Sodium: ${sodium.toFixed(2)} mg/L`;
        document.getElementById("potassium").innerText = `Potassium: ${potassium.toFixed(2)} mg/L`;
        document.getElementById("silica").innerText = `Silica: ${silica.toFixed(2)} mg/L`;

        // Add entry to the result table
        entryCount++;
        const tableBody = document.getElementById("resultTable").getElementsByTagName("tbody")[0];
        const newRow = tableBody.insertRow();

        // Add cells to the new row
        newRow.insertCell(0).innerText = entryCount;
        newRow.insertCell(1).innerText = sampleCode;
        newRow.insertCell(2).innerText = tds.toFixed(2);
        newRow.insertCell(3).innerText = chloride.toFixed(2);
        newRow.insertCell(4).innerText = sulphate.toFixed(2);
        newRow.insertCell(5).innerText = alkalinity.toFixed(2);
        newRow.insertCell(6).innerText = sodium.toFixed(2);
        newRow.insertCell(7).innerText = potassium.toFixed(2);
        newRow.insertCell(8).innerText = silica.toFixed(2);

        // Store data for Excel export
        resultData.push({
            "S.No": entryCount,
            "Sample Code": sampleCode,
            "TDS (mg/L)": tds.toFixed(2),
            "Chloride (mg/L)": chloride.toFixed(2),
            "Sulphate (mg/L)": sulphate.toFixed(2),
            "Total Alkalinity (mg/L)": alkalinity.toFixed(2),
            "Sodium (mg/L)": sodium.toFixed(2),
            "Potassium (mg/L)": potassium.toFixed(2),
            "Silica (mg/L)": silica.toFixed(2)
        });
    }

    // Function to trigger Excel file download
    function downloadExcel() {
        if (resultData.length === 0) {
            alert("No results to download.");
            return;
        }

        const worksheet = XLSX.utils.json_to_sheet(resultData);
        const workbook = XLSX.utils.book_new();
        XLSX.utils.book_append_sheet(workbook, worksheet, "Water Quality Results");

        // Trigger file download
        XLSX.writeFile(workbook, "Water_Quality_Results.xlsx");
    }

    // Fix for button functionality
    document.getElementById("calculateBtn").onclick = calculate;
    document.getElementById("downloadBtn").onclick = downloadExcel;
</script>

</body>
</html>
